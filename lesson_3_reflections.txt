When would you want to use a remote repository rather than keeping your work local?
When I am collaborating with someone, I would definitely want to use a remote
repository to keep changes on my local repository as well.
Why might you want to always pull changes manually rather than having 
Git automatically stay up-to-date with your remote repository?
Pulling manually is the most convenient way to keep your work, if it
is either in your local repository, or if it is on a remote connected
to that repository, to stay up to date and prevent changes to be
overwritten. If GitHub pulls automatically, it might overwrite changes
in your local repository that you haven't pushed to that remote 
repository in GitHub.
Describe the differences between forks, clones, and branches. When
would you use one instead of another?
A fork is a copy of another user's repository hosted on GitHub. It
differs from a git Clone in that the cloned repository is still on
GitHub servers as a 'clone'. You can create branches on either, but
your changes will not affect the repositories original source. 
The benefit of having a local copy of the remote GitHub repositoy,
in the name of 'origin/master' is very helpful because it lets you
keep track of changes you've Pushed, as well as changed others
collaborating have Pushed as well. When running 'git fetch', and then
'git pull origin master' to pull your origin chanegs and merge them 
into your master, and your remote copy gets updated with that GitHub 
copy, and then you can compare and contrast what you need to update. 
Afterwards, you can then run 'git push' to have local and remote 
copies of that repository completely updated.
Collaborating without GitHub would require a lot more waiting when 
making changes. I would first conatact all of the users that are
collaborating on the same repository before making any commited
changes. Then I would only Push these chanegs to the master 
branch after they have checked the files I have changed.
I would would use a seperate branch when either testing out a piece
of code that changes a feature in the file in said reposioty. I would
also use it when collaborating with others, to use and edit their
changes into my local and remote master branches.